{
  "_args": [
    [
      {
        "raw": "plotql@file:../.",
        "scope": null,
        "escapedName": "plotql",
        "name": "plotql",
        "rawSpec": "file:../.",
        "spec": "/Users/danieloquinn/package_development/plotql",
        "type": "directory"
      },
      "/Users/danieloquinn/package_development/plotql/example"
    ]
  ],
  "_from": "..",
  "_id": "plotql@1.0.0",
  "_inCache": true,
  "_location": "/plotql",
  "_phantomChildren": {},
  "_requested": {
    "raw": "plotql@file:../.",
    "scope": null,
    "escapedName": "plotql",
    "name": "plotql",
    "rawSpec": "file:../.",
    "spec": "/Users/danieloquinn/package_development/plotql",
    "type": "directory"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "file:..",
  "_shasum": "fd40bd449322d5da331c5d3ce9310a43f577dd7a",
  "_shrinkwrap": null,
  "_spec": "plotql@file:../.",
  "_where": "/Users/danieloquinn/package_development/plotql/example",
  "author": {
    "name": "Daniel OQuinn"
  },
  "bugs": {
    "url": "https://github.com/MechETechE/plotql/issues"
  },
  "dependencies": {
    "engine.io": "file:lib/arctic_modules/engine.io",
    "engine.io-client": "file:lib/arctic_modules/engine.io-client",
    "exec": "^0.2.1",
    "kue": "^0.11.5",
    "say.js": "^1.2.0",
    "socket.io": "file:lib/arctic_modules/socket.io",
    "socket.io-adapter": "file:lib/arctic_modules/socket.io-adapter",
    "socket.io-client": "file:lib/arctic_modules/socket.io-client"
  },
  "description": "query utility for mongodb",
  "devDependencies": {},
  "gitHead": "1078bd8d5c1878d433ffb8dd09ecc1be7acae174",
  "homepage": "https://github.com/MechETechE/plotql#readme",
  "keywords": [
    "query",
    "mutate",
    "nosql",
    "sql"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "plotql",
  "optionalDependencies": {},
  "readme": "How to use:\n\nRedis must be installed and running, mongodb as well.\n\n`var plotql = require('plotql')`\n\nthen, we tell it to use our server and which database to consume.\n\n`plotql.use(server,db)`\n\n\nuse socket.io-client to emit to the `query` channel. It accepts 2 arguments, the query and a callback.\n\n`io.emit('query', { data: {\n  query: 'db.users.find()',\n  callback: { \n    channel: 'CREATE_USER',\n    data: 'your message' \n  }\n})`\n\nPlotql will emit the event back specified by the callback to the client or wherever you need it. We can listen in our highest level component for events in react and pass them down the chain using redux and graphql combination, keeping all clients up to date.\n\n\nMotiviation:\n\nGet data back to the client in an efficient manner, abstract the connection maintenance away from development.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MechETechE/plotql.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.0"
}
